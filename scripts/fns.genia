TRUE = 1 == 1
FALSE = 1 == 2


fn compose(f) -> fn(x) -> f(x)
fn compose(f, g) -> fn(x) -> f(g(x))
fn compose(f, g, h) -> fn(x) -> f(g(h(x)))

fn invert(pred) -> fn(x) when pred(x) -> FALSE | (x) -> TRUE

fn equal? (x) -> fn(y) -> x == y
    | (x, y) -> x == y

fn constantly(v) -> fn(_) -> v 

trace()

