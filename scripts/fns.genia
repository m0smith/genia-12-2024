TRUE = 1 == 1
FALSE = 1 == 2


define compose(f) -> define(x) -> f(x)
define compose(f, g) -> define(x) -> f(g(x))
define compose(f, g, h) -> define(x) -> f(g(h(x)))

define invert(pred) -> define(x) when pred(x) -> FALSE | (x) -> TRUE

define equal? (x) -> define(y) -> x == y
    | (x, y) -> x == y

define constantly(v) -> define(_) -> v 

trace()

